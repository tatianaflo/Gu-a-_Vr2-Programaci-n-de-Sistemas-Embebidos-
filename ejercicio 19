#include <Wire.h>
#include <Adafruit_GFX.h> 
#include <Adafruit_SSD1306.h>

#define ANCHO_PANTALLA 128 
#define ALTO_PANTALLA 64 

#define OLED_RESET     -1 
#define DIRECCION_PANTALLA 0x3C 

Adafruit_SSD1306 display(ANCHO_PANTALLA, ALTO_PANTALLA, &Wire, OLED_RESET);


#define LOGO_WIDTH    84
#define LOGO_HEIGHT   52


const unsigned char PROGMEM logo[] = {
 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 
	0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xfc, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xfe, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x1f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xfe, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x07, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x87, 0xfc, 0xf0, 
	0x70, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xcf, 0xfc, 0xf8, 0x78, 0x7e, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0xf1, 0xcf, 0x00, 0xfc, 0x78, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x0f, 0xf8, 
	0xfe, 0x70, 0xe7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xcf, 0xf8, 0xef, 0x79, 0xe7, 0x80, 0x00, 
	0x00, 0x00, 0x00, 0x03, 0xef, 0x00, 0xe7, 0xf1, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0xf1, 0xef, 
	0x00, 0xe3, 0xf3, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0xff, 0xcf, 0xfc, 0xe1, 0xff, 0x81, 0xe0, 
	0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xfc, 0x0f, 0xff, 0xff, 
	0xf8, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xfc, 0x0f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x07, 
	0xff, 0xff, 0xf8, 0x0f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xf8, 0x07, 0xff, 
	0xff, 0xf8, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xf0, 0x03, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x03, 0xf0, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0xc1, 
	0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe1, 0xe1, 0xf0, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x07, 0xc1, 0xe0, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x83, 
	0xf0, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x83, 0xf0, 0x7c, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x1f, 0x07, 0xf8, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 
	0x0f, 0xfc, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x0f, 0xfc, 0x1f, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x1f, 0xfe, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x7c, 0x1f, 0x3e, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x3e, 0x1f, 0x07, 0xc0, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x3c, 0x0f, 0x87, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x01, 0xf0, 0x7c, 0x0f, 0x83, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0xf8, 0x07, 0xc3, 
	0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0xf8, 0x07, 0xc1, 0xf0, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x03, 0xe1, 0xf0, 0x03, 0xe1, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc1, 0xf0, 0x01, 
	0xf0, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc3, 0xe0, 0x01, 0xf0, 0x78, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x07, 0x87, 0xc0, 0x00, 0xf8, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x07, 0xc0, 
	0x00, 0xf8, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x7c, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 
	0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x1c, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00
};



void setup() {
  Serial.begin(9600);

  if(!display.begin(SSD1306_SWITCHCAPVCC, DIRECCION_PANTALLA)) {
    Serial.println(F("Fallo en la asignacion de SSD1306"));
  }


  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0,0);
  display.println("centro de dise√±o y metrologia");
  display.display();


  display.drawLine(0, 10, 128, 10, WHITE); // DIBUJA UNA LINEA
  display.display();
     
  display.drawBitmap( (display.width() - LOGO_WIDTH ) / 2,((display.height()- LOGO_HEIGHT) / 2 )+7, logo, LOGO_WIDTH, LOGO_HEIGHT, WHITE);
  display.display();
 

}

void loop() {
}
